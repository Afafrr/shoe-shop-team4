import type { Metadata } from "next";
import { Work_Sans } from "next/font/google";
import theme from "@/theme";
import { ThemeProvider } from "@mui/material/styles";
import { AppRouterCacheProvider } from "@mui/material-nextjs/v14-appRouter";
import CssBaseline from "@mui/material/CssBaseline";
import { Providers } from "./providers";
import { authOptions } from "@/utils/auth";
import { getData, ResData } from "@/utils/getData";
import { getServerSession } from "next-auth";
import { UserDataProvider } from "@/contexts/UserDataProvider";
import { UserData } from "@/types/types";

const workSans = Work_Sans({
  subsets: ["latin"],
  weight: ["300", "400", "500", "700"],
});
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  async function getUserInfo() {
    const session = await getServerSession(authOptions);
    const revalidateConfig = {
      next: { revalidate: 3600 },
    };
    if (session) {
      const data: ResData<UserData> = await getData(
        "users/me?populate=avatar",
        session?.user.jwt,
        revalidateConfig
      );
      return data;
    }
  }
  const userData = await getUserInfo();

  return (
    <html lang="en">
      <body className={workSans.className}>
        <AppRouterCacheProvider options={{ enableCssLayer: true }}>
          <ThemeProvider theme={theme}>
            <CssBaseline />
            <Providers>
              <UserDataProvider data={userData}>{children}</UserDataProvider>
            </Providers>
          </ThemeProvider>
        </AppRouterCacheProvider>
      </body>
    </html>
  );
}
